{

  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "VMName": {
      "type": "string",
      "metadata": {
        "description": "Infrastructure Virtual Machine name."
      }
    },

    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },

    "DomUserName": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "DomPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "OUPath": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "OU to place VMs when joining to domain."
      }
    },

    "windowsOSVersion": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter",
        "2016-Datacenter",
        "Windows-Server-Technical-Preview"
      ],
      "metadata": {
        "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."
      }
    },
    "VMSize1": {
      "type": "string",
      "defaultValue": "Basic_A2",
      "allowedValues": [
        "Basic_A2",
        "Standard_D1",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4",
        "Standard_D11",
        "Standard_D12",
        "Standard_D13",
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A5"
      ],
      "metadata": {
        "description": "The size of the VM."
      }
    },

    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "group": "Infrastructure settings",
        "description": "Change this value to your repo name if deploying from a fork"
      },
      "defaultValue": "https://raw.githubusercontent.com/djnavarrete/AXC/master/Resources"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "group": "Infrastructure settings",
        "description": "Auto-generated token to access _artifactsLocation",
        "artifactsLocationSasToken": ""
      },
      "defaultValue": ""
    },
    "storageAcctNewOrExisting": {
      "type": "string",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "description": "Use a new or existing storage account"
      },
      "defaultValue": "existing"
    },
    "storageAcctResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "Resource Group for storage account for VHD placement. Only needed if using existing storage account"
      },
      "defaultValue": ""
    },

    "storageAcctName": {
      "type": "string",
      "metadata": {
        "description": "Name of storage Account for VHD placement."
      },
      "defaultValue": "[tolower(concat(parameters('VMName'),'sa'))]"
    },
    "storageAcctContainerName": {
      "type": "string",
      "metadata": {
        "description": "Name of storage Account container for VHD placement."
      },
      "defaultValue": "vhds"
    },
    "domainName": {
      "type": "string",
      "metadata": {
        "description": "Join to local domain."
      }
    },
    "SubscriptionID": {
      "type": "string",
      "metadata": {
        "description": "SubscriptionID where VNet resides"
      }
    },
    "VNetRG": {
      "type": "string",
      "metadata": {
        "description": "VNet Resource Group."
      }
    },
    "VNetName": {
      "type": "string",
      "metadata": {
        "description": "VNet Name."
      }
    },
    "SubnetName": {
      "type": "string",
      "metadata": {
        "description": "SubnetName."
      }
    }
    
  }, //End of Parameters

  "variables": {

    "DomUserNameSlashes": "[concat('\\',parameters('DomUserName'))]",

    "subnetRef": "[concat('/subscriptions/',parameters('SubscriptionID'),'/resourceGroups/',parameters('VNetRG'),'/providers/Microsoft.Network/virtualNetworks/',parameters('VnetName'),'/subnets/',parameters('SubnetName'))]",

    "Configurationurl": "https://raw.githubusercontent.com/djnavarrete/paragondev/master/Resources/configurationdata.psd1",

    //Template URIs
    "TemplateUrl": "[concat(parameters('_artifactsLocation'),'/Templates')]",
    "NetworkInterfaceURI": "[concat(variables('TemplateUrl'),'/','network_interface.json')]",
    "VMUri": "[concat(variables('TemplateUrl'),'/','vm.json')]",
    "StorageAccountURI": "[concat(variables('TemplateUrl'),'/',parameters('storageAcctNewOrExisting'),'_storage_account.json')]",

    "StorageAccountObject": {
      "Name": "[parameters('storageAcctName')]",
      "SkuName": "Standard_LRS",
      "ResourceGroup": "[parameters('storageAcctResourceGroup')]"
    },
    "NICObject5": {
      "Name": "[concat(parameters('VMName'),'-Nic')]",
      "subnetRef": "[variables('subnetRef')]"
    },

    "VMObject": {
      "Name": "[parameters('VMName')]",
      "Size": "[parameters('VMSize1')]",
      //     "ASName": "[variables('ASObject2').Name]",
      "nicName": "[variables('NICObject5').Name]",
      "adminUserName": "[parameters('adminUsername')]",
      "adminPassword": "[parameters('adminPassword')]",
      "publisher": "MicrosoftWindowsServer",
      "offer": "WindowsServer",
      "sku": "[parameters('windowsOSVersion')]",
      "version": "latest",
      "storageAccountName": "[parameters('storageAcctName')]",
      "storageAccountContainerName": "[parameters('storageAcctContainerName')]",
      "URI": "[variables('VMUri')]",
      "DataDiskSizeGB": "80"

    }

  },
  "resources": [
    
    {
      "name": "StorageAccountResource",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-02-01",
      "dependsOn": [ ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('StorageAccountURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "StorageAccountObject": {
            //"value": "[concat(variables('VMName1'),'-','availabilityset')]"
            "value": "[variables('StorageAccountObject')]"
          }
        }
      }
    },


    {
      "name": "NetworkInterfaceResource",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-02-01",
      "dependsOn": [
        //       "[resourceid('Microsoft.Resources/deployments/', 'PublicIPResource2')]",
        // "[resourceid('Microsoft.Resources/deployments/', 'VirtualNetworkResource')]" //,
        //       "[resourceid('Microsoft.Resources/deployments/', 'LoadBalancerResource2')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('NetworkInterfaceURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {

          "NICObject": {
            "value": "[variables('NICObject5')]"
          }
        }
      }
    },

    {
      "name": "VMResource",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[resourceid('Microsoft.Resources/deployments/', 'StorageAccountResource')]",
        "[resourceid('Microsoft.Resources/deployments/', 'NetworkInterfaceResource')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('VMObject').Uri]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "VMObject": {
            "value": "[variables('VMObject')]"
          }
        }
      }
    },

    {
      "comments": "Join domain - JsonADDomainExtension",
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('VMName'),'/joindomain')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceid('Microsoft.Resources/deployments/', 'VMResource')]"
      ],
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "JsonADDomainExtension",
        "typeHandlerVersion": "1.3",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "Name": "[parameters('domainName')]",
          "User": "[concat(parameters('domainName'), variables('DomUserNameSlashes'))]",
          "Restart": "true",
          //                    "Options": "[variables('domainJoinOptions')]",
          "Options": "3",
          "OUPath": "[parameters('OUPath')]"
        },
        "protectedSettings": {
          "Password": "[parameters('DomPassword')]"
        }
      }
    }
    

  ] //,
  //"outputs": {
  //"hostname": {
  // "type": "string",
  //"value": "[reference(variables('PIPObject').Name).dnsSettings.fqdn]"
  // }
  // }
}
