{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "OCReleaseVMName": {
      "type": "string",
      "metadata": {
        "description": "Virtual Machine name."
      }
    },
    "OCTransAgentVMName": {
      "type": "string",
      "metadata": {
        "description": "Virtual Machine name."
      }
    },
    "OCWeb1VMName": {
      "type": "string",
      "metadata": {
        "description": "Virtual Machine name."
      }
    },
    "OCWeb2VMName": {
      "type": "string",
      "metadata": {
        "description": "Virtual Machine name."
      }
    },
    "OCApp1VMName": {
      "type": "string",
      "metadata": {
        "description": "Virtual Machine name."
      }
    },
    "OCApp2VMName": {
      "type": "string",
      "metadata": {
        "description": "Virtual Machine name."
      }
    },
    "OCAgentVMName": {
      "type": "string",
      "metadata": {
        "description": "Virtual Machine name."
      }
    },
    "OCBDIVMName": {
      "type": "string",
      "metadata": {
        "description": "Virtual Machine name."
      }
    },

    "FormFastVMName": {
      "type": "string",
      "metadata": {
        "description": "Virtual Machine name."
      }
    },
    "OCMDVMName": {
      "type": "string",
      "metadata": {
        "description": "Virtual Machine name."
      }
    },
    "OCCaptivaVMName": {
      "type": "string",
      "metadata": {
        "description": "Virtual Machine name."
      }
    },

    "PNNtrVMName": {
      "type": "string",
      "metadata": {
        "description": "Virtual Machine name."
      }
    },

    "PNWebVMName": {
      "type": "string",
      "metadata": {
        "description": "Virtual Machine name."
      }
    },
    "RDSVMName": {
      "type": "string",
      "metadata": {
        "description": "Virtual Machine name."
      }
    },
    "DBSVMName": {
      "type": "string",
      "metadata": {
        "description": "Virtual Machine name."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "domUsername": {
      "type": "string",
      "metadata": {
        "description": "Dom Password."
      }
    },
    "domPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Dom Password."
      }
    },
    "windowsOSVersion": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter",
        "2016-Nano-Server-Technical-Preview",
        "2016-Technical-Preview-with-Containers",
        "Windows-Server-Technical-Preview"
      ],
      "metadata": {
        "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."
      }
    },
    "VMSize1": {
      "type": "string",
      "defaultValue": "Standard_A2",
      "allowedValues": [
        "Standard_D1",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4",
        "Standard_D11",
        "Standard_D12",
        "Standard_D13",
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A5"
      ],
      "metadata": {
        "description": "The size of the VM."
      }
    },
    "VMSize2": {
      "type": "string",
      "defaultValue": "Standard_D2",
      "allowedValues": [
        "Standard_D1",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4",
        "Standard_D11",
        "Standard_D12",
        "Standard_D13",
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A5"
      ],
      "metadata": {
        "description": "The size of the VM."
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "group": "Infrastructure settings",
        "description": "Change this value to your repo name if deploying from a fork"
      },
      "defaultValue": "https://raw.githubusercontent.com/EISSystemsDevOps/Automation/master/Resources"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "group": "Infrastructure settings",
        "description": "Auto-generated token to access _artifactsLocation",
        "artifactsLocationSasToken": ""
      },
      "defaultValue": ""
    },
    "storageAcctNewOrExisting": {
      "type": "string",
      "allowedValues": [
        "new",
        "existing"
      ] ,
      "metadata": {
        "description": "Use a new or existing storage account"
      },
      "defaultValue": "new"
    },
    "storageAcctResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "Resource Group for storage account for VHD placement. Only needed if using existing storage account"
      },
      "defaultValue": ""
    },

    "storageAcctName": {
      "type": "string",
      "metadata": {
        "description": "Name of storage Account for VHD placement."
      }//,
//      "defaultValue": "[tolower(concat(parameters('CustomerName'),'sa'))]"
    },
    "storageAcctContainerName": {
      "type": "string",
      "metadata": {
        "description": "Name of storage Account container for VHD placement."
      },
      "defaultValue": "vhds"
    },

    "domainName": {
      "type": "string",
      "metadata": {
        "description": "Local AD domain name to be setup."
      },
      "defaultValue": "SLCES.COM"
    },

    "VNetRG": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "VNet to deploy VMs into."
      }
    },

    "VNetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "VNet resource group to deploy VMs into."
      }
    },
    "SubnetName": {
      "type": "string",
      "defaultValue": "Subnet-1",
      "metadata": {
        "description": "Subnet to deploy VMs into."
      }
    },
    "ouPath": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Subnet to deploy VMs into."
      }
    }


    //"SourcePath": {
    //  "type": "string",
    //  "defaultValue": "[concat('\\','slcesfs01\windowsserver2012r2\sources\sxs')]",
    //  "metadata": {
    //    "description": "Server 2012 R2 SxS source path for installing windows roles and features."
    //  }
    //},  
  },//End of Parameters


  "variables": {
    "domainUser": "[concat(parameters('domainName'),'\\',parameters('DomUsername'))]",
    "sourcePath": "\\\\slcesfs01\\windowsserver2012r2\\sources\\sxs",
    //DSC URLs
    "DSCmodulesUrl": "[concat(parameters('_artifactsLocation'),'/DSC/')]",
    //"DSCmodulesUrl": "[concat(parameters('_artifactsLocation'),'/')]",
    "PNWebDSCModuleUrl": "[concat(variables('DSCmodulesUrl'),'WebServerConfig14x.ps1.zip')]",
    "PNWebConfigurationFunction": "WebServerConfig14x.ps1\\WebServerConfig14x",
    "PNNtrDSCModuleUrl": "[concat(variables('DSCmodulesUrl'),'NtrServerConfig14x.ps1.zip')]",
    "PNNtrConfigurationFunction": "NtrServerConfig14x.ps1\\NtrServerConfig14x",
    "PNBreDSCModuleUrl": "[concat(variables('DSCmodulesUrl'),'BreServerConfig.ps1.zip')]",
    "PNBreConfigurationFunction": "BreServerConfig.ps1\\BreServerConfig",
    "adPDCModulesURL": "[concat(parameters('_artifactsLocation'),'/CreateADPDC.ps1.zip')]",
    "adPDCConfigurationFunction": "CreateADPDC.ps1\\CreateADPDC",
    "OCReleaseDSCModuleUrl": "[concat(variables('DSCmodulesUrl'),'/OC_ReleaseConfig.ps1.zip')]",
    "OCReleaseConfigurationFunction": "OC_ReleaseConfig.ps1\\OC_ReleaseConfig",
    "OCTransAgentDSCModuleUrl": "[concat(variables('DSCmodulesUrl'),'/OC_TransAgentConfig.ps1.zip')]",
    "OCTransAgentConfigurationFunction": "OC_TransAgentConfig.ps1\\OC_TransAgentConfig",

    "OCWebDSCModuleUrl": "[concat(variables('DSCmodulesUrl'),'OC_ClusterConfig.ps1.zip')]",
    "OCWebConfigurationFunction": "OC_ClusterConfig.ps1\\OC_ClusterConfig",


    "OCAppDSCModuleUrl": "[concat(variables('DSCmodulesUrl'),'/OC_BackendConfig.ps1.zip')]",
    "OCAppConfigurationFunction": "OC_BackendConfig.ps1\\OC_BackendConfig",

    "OCAgentDSCModuleUrl": "[concat(variables('DSCmodulesUrl'),'/OC_AgentConfig.ps1.zip')]",
    "OCAgentConfigurationFunction": "OC_AgentConfig.ps1\\OC_AgentConfig",

    "OCBDIDSCModuleUrl": "[concat(variables('DSCmodulesUrl'),'/OC_BDIConfig.ps1.zip')]",
    "OCBDIConfigurationFunction": "OC_BDIConfig.ps1\\OC_BDIConfig",
    "OCCaptivaDSCModuleUrl": "[concat(variables('DSCmodulesUrl'),'/OC_CaptivaConfig.ps1.zip')]",
    "OCCaptivaConfigurationFunction": "OC_CaptivaConfig.ps1\\OC_CaptivaConfig",
    "RDSDSCModuleUrl": "[concat(variables('DSCmodulesUrl'),'/RDSConfig.ps1.zip')]",
    "RDSConfigurationFunction": "RDSConfig.ps1\\RDSConfig",
    "DBDSCModuleUrl": "[concat(variables('DSCmodulesUrl'),'DBServerConfigD2.ps1.zip')]",
    "DBConfigurationFunction": "DBServerConfigD2.ps1\\DBServerConfigD2",
    
    "Configurationurl":"https://raw.githubusercontent.com/EISSystemsDevOps/Automation/master/Resources/configurationdata.psd1",

    //Template URIs
    "TemplateUrl": "[concat(parameters('_artifactsLocation'),'/Templates')]",
    "AvailabilitySetURI": "[concat(variables('TemplateUrl'),'/','availability_set.json')]",
    ////  This is a NIC with a Load Balancer attached:
    "NetworkInterfaceLBURI": "[concat(variables('TemplateUrl'),'/','network_interface_lb.json')]",
    ////  This is a network interface with static IP address
    "NetworkInterfaceStaticURI": "[concat(variables('TemplateUrl'),'/','network_interface_static.json')]",
    ////This is a standard NIC with a Public IP attached:
    "NetworkInterfacePIPURI": "[concat(variables('TemplateUrl'),'/','network_interface_pip.json')]",
    ////This is a standard NIC without a Public IP or Load balancer:
    "NetworkInterfaceURI": "[concat(variables('TemplateUrl'),'/','network_interface.json')]",
    "NetworkInterfaceDNSURI": "[concat(variables('TemplateUrl'),'/','network_interface_dns.json')]",
    "PublicIPURI": "[concat(variables('TemplateUrl'),'/','public_ip.json')]",
    "VNetURI": "[concat(variables('TemplateUrl'),'/','full_vnet.json')]",
    "VMURI": "[concat(variables('TemplateUrl'),'/','vm.json')]",
    "VMOneDataDiskURI": "[concat(variables('TemplateUrl'),'/','vm_one_datadisk.json')]",
    "VMTwoDataDisksURI": "[concat(variables('TemplateUrl'),'/','vm_two_datadisks.json')]",
    "VMFourDataDisksURI": "[concat(variables('TemplateUrl'),'/','vm_four_datadisks.json')]",
    "VMEightDataDisksURI": "[concat(variables('TemplateUrl'),'/','vm_eight_datadisks.json')]",
    "StorageAccountURI": "[concat(variables('TemplateUrl'),'/',parameters('storageAcctNewOrExisting'),'_storage_account.json')]",
    "NetworkSecurityGroupURI": "[concat(variables('TemplateUrl'),'/','rdp_network_security_group.json')]",

    "VnetRefObject": {
      "vnetID": "[resourceId(parameters('VNetRG'), 'Microsoft.Network/virtualNetworks', parameters('VNetName'))]"
    },
    "subnetRef": "[concat(variables('VnetRefObject').vnetID,'/subnets/', parameters('subnetName'))]",

    "StorageAccountObject": {
      "Name": "[parameters('storageAcctName')]",
      "SkuName": "Standard_LRS",
      "ResourceGroup": "[parameters('storageAcctResourceGroup')]"
    },

    "NICObject1": {
      "Name": "[concat(parameters('OCReleaseVMName'),'-Nic')]",
      "subnetRef": "[variables('SubnetRef')]"
    },
    "NICObject2": {
      "Name": "[concat(parameters('OCTransAgentVMName'),'-Nic')]",
      "subnetRef": "[variables('SubnetRef')]"
    },
    "NICObject3": {
      "Name": "[concat(parameters('OCWeb1VMName'),'-Nic')]",
      "subnetRef": "[variables('SubnetRef')]"
    },
    "NICObject4": {
      "Name": "[concat(parameters('OCWeb2VMName'),'-Nic')]",
      "subnetRef": "[variables('SubnetRef')]"

    },
    "NICObject5": {
      "Name": "[concat(parameters('OCApp1VMName'),'-Nic')]",
      "subnetRef": "[variables('SubnetRef')]"
    },
    "NICObject6": {
      "Name": "[concat(parameters('OCApp2VMName'),'-Nic')]",
      "subnetRef": "[variables('SubnetRef')]"
    },
    "NICObject7": {
      "Name": "[concat(parameters('OCAgentVMName'),'-Nic')]",
      "subnetRef": "[variables('SubnetRef')]"

    },
    "NICObject8": {
      "Name": "[concat(parameters('OCBDIVMName'),'-Nic')]",
      "subnetRef": "[variables('SubnetRef')]"
    },
    "NICObject9": {
      "Name": "[concat(parameters('FormFastVMName'),'-Nic')]",
      "subnetRef": "[variables('SubnetRef')]"    
    },
    "NICObject10": {
      "Name": "[concat(parameters('OCMDVMName'),'-Nic')]",
      "subnetRef": "[variables('SubnetRef')]"

    },
    "NICObject11": {
      "Name": "[concat(parameters('OCCaptivaVMName'),'-Nic')]",
      "subnetRef": "[variables('SubnetRef')]"
    },

    "NICObject12": {
      "Name": "[concat(parameters('DBSVMName'),'-Nic')]",
      "subnetRef": "[variables('SubnetRef')]"
    },
    "NICObject13": {
      "Name": "[concat(parameters('PNNtrVMName'),'-Nic')]",
      "subnetRef": "[variables('SubnetRef')]"    
    },

    "NICObject14": {
      "Name": "[concat(parameters('PNWebVMName'),'-Nic')]",
      "subnetRef": "[variables('SubnetRef')]"
    },

    "NICObject15": {
      "Name": "[concat(parameters('RDSVMName'),'-Nic')]",
      "subnetRef": "[variables('SubnetRef')]"
    },

    "VMObject1": {
      "Name": "[parameters('OCReleaseVMName')]",
      "Size": "[parameters('VMSize1')]",
      "nicName": "[variables('NICObject1').Name]",
      "adminUserName": "[parameters('adminUsername')]",
      "adminPassword": "[parameters('adminPassword')]",
      "publisher": "MicrosoftWindowsServer",
      "offer": "WindowsServer",
      "sku": "[parameters('windowsOSVersion')]",
      "version":"latest",
      "storageAccountName": "[parameters('storageAcctName')]",
      "storageAccountContainerName": "[parameters('storageAcctContainerName')]",
      "URI": "[variables('VMOneDataDiskUri')]",
      "DataDiskSizeGB": "80"
    },
    "VMObject2": {
      "Name": "[parameters('OCTransAgentVMName')]",
      "Size": "[parameters('VMSize1')]",
      "nicName": "[variables('NICObject2').Name]",
      "adminUserName": "[parameters('adminUsername')]",
      "adminPassword": "[parameters('adminPassword')]",
      "publisher": "MicrosoftWindowsServer",
      "offer": "WindowsServer",
      "sku": "[parameters('windowsOSVersion')]",
      "version":"latest",
      "storageAccountName": "[parameters('storageAcctName')]",
      "storageAccountContainerName": "[parameters('storageAcctContainerName')]",
      "URI": "[variables('VMOneDataDiskUri')]",
      "DataDiskSizeGB": "80"

    },
    "VMObject3": {
      "Name": "[parameters('OCWeb1VMName')]",
      "Size": "[parameters('VMSize1')]",
      "nicName": "[variables('NICObject3').Name]",
      "adminUserName": "[parameters('adminUsername')]",
      "adminPassword": "[parameters('adminPassword')]",
      "publisher": "MicrosoftWindowsServer",
      "offer": "WindowsServer",
      "sku": "[parameters('windowsOSVersion')]",
      "version":"latest",
      "storageAccountName": "[parameters('storageAcctName')]",
      "storageAccountContainerName": "[parameters('storageAcctContainerName')]",
      "URI": "[variables('VMOneDataDiskUri')]",
      "DataDiskSizeGB": "80"

    },
    "VMObject4": {
      "Name": "[parameters('OCWeb2VMName')]",
      "Size": "[parameters('VMSize1')]",
      "nicName": "[variables('NICObject4').Name]",
      "adminUserName": "[parameters('adminUsername')]",
      "adminPassword": "[parameters('adminPassword')]",
      "publisher": "MicrosoftWindowsServer",
      "offer": "WindowsServer",
      "sku": "[parameters('windowsOSVersion')]",
      "version":"latest",
      "storageAccountName": "[parameters('storageAcctName')]",
      "storageAccountContainerName": "[parameters('storageAcctContainerName')]",
      "URI": "[variables('VMOneDataDiskUri')]",
      "DataDiskSizeGB": "80"

    },
    "VMObject5": {
      "Name": "[parameters('OCApp1VMName')]",
      "Size": "[parameters('VMSize1')]",
      "nicName": "[variables('NICObject5').Name]",
      "adminUserName": "[parameters('adminUsername')]",
      "adminPassword": "[parameters('adminPassword')]",
      "publisher": "MicrosoftWindowsServer",
      "offer": "WindowsServer",
      "sku": "[parameters('windowsOSVersion')]",
      "version":"latest",
      "storageAccountName": "[parameters('storageAcctName')]",
      "storageAccountContainerName": "[parameters('storageAcctContainerName')]",
      "URI": "[variables('VMOneDataDiskUri')]",
      "DataDiskSizeGB": "80"

    },
    "VMObject6": {
      "Name": "[parameters('OCApp2VMName')]",
      "Size": "[parameters('VMSize1')]",
      "nicName": "[variables('NICObject6').Name]",
      "adminUserName": "[parameters('adminUsername')]",
      "adminPassword": "[parameters('adminPassword')]",
      "publisher": "MicrosoftWindowsServer",
      "offer": "WindowsServer",
      "sku": "[parameters('windowsOSVersion')]",
      "version":"latest",
      "storageAccountName": "[parameters('storageAcctName')]",
      "storageAccountContainerName": "[parameters('storageAcctContainerName')]",
      "URI": "[variables('VMOneDataDiskUri')]",
      "DataDiskSizeGB": "80"


    },
    "VMObject7": {
      "Name": "[parameters('OCAgentVMName')]",
      "Size": "[parameters('VMSize1')]",
      "nicName": "[variables('NICObject7').Name]",
      "adminUserName": "[parameters('adminUsername')]",
      "adminPassword": "[parameters('adminPassword')]",
      "publisher": "MicrosoftWindowsServer",
      "offer": "WindowsServer",
      "sku": "[parameters('windowsOSVersion')]",
      "version":"latest",
      "storageAccountName": "[parameters('storageAcctName')]",
      "storageAccountContainerName": "[parameters('storageAcctContainerName')]",
      "URI": "[variables('VMOneDataDiskUri')]",
      "DataDiskSizeGB": "80"

    },
    "VMObject8": {
      "Name": "[parameters('OCBDIVMName')]",
      "Size": "[parameters('VMSize1')]",
      "nicName": "[variables('NICObject8').Name]",
      "adminUserName": "[parameters('adminUsername')]",
      "adminPassword": "[parameters('adminPassword')]",
      "publisher": "MicrosoftWindowsServer",
      "offer": "WindowsServer",
      "sku": "[parameters('windowsOSVersion')]",
      "version":"latest",
      "storageAccountName": "[parameters('storageAcctName')]",
      "storageAccountContainerName": "[parameters('storageAcctContainerName')]",
      "URI": "[variables('VMOneDataDiskUri')]",
      "DataDiskSizeGB": "80"

    },
    "VMObject9": {
      "Name": "[parameters('FormFastVMName')]",
      "Size": "[parameters('VMSize1')]",
      "nicName": "[variables('NICObject9').Name]",
      "adminUserName": "[parameters('adminUsername')]",
      "adminPassword": "[parameters('adminPassword')]",
      "publisher": "MicrosoftWindowsServer",
      "offer": "WindowsServer",
      "sku": "[parameters('windowsOSVersion')]",
      "version":"latest",
      "storageAccountName": "[parameters('storageAcctName')]",
      "storageAccountContainerName": "[parameters('storageAcctContainerName')]",
      "URI": "[variables('VMOneDataDiskUri')]",
      "DataDiskSizeGB": "80"

    },
    "VMObject10": {
      "Name": "[parameters('OCMDVMName')]",
      "Size": "[parameters('VMSize1')]",
      "nicName": "[variables('NICObject10').Name]",
      "adminUserName": "[parameters('adminUsername')]",
      "adminPassword": "[parameters('adminPassword')]",
      "publisher": "MicrosoftWindowsServer",
      "offer": "WindowsServer",
      "sku": "[parameters('windowsOSVersion')]",
      "version":"latest",
      "storageAccountName": "[parameters('storageAcctName')]",
      "storageAccountContainerName": "[parameters('storageAcctContainerName')]",
      "URI": "[variables('VMOneDataDiskUri')]",
      "DataDiskSizeGB": "80"

    },
    "VMObject11": {
      "Name": "[parameters('OCCaptivaVMName')]",
      "Size": "[parameters('VMSize1')]",
      "nicName": "[variables('NICObject11').Name]",
      "adminUserName": "[parameters('adminUsername')]",
      "adminPassword": "[parameters('adminPassword')]",
      "publisher": "MicrosoftWindowsServer",
      "offer": "WindowsServer",
      "sku": "[parameters('windowsOSVersion')]",
      "version": "latest",
      "storageAccountName": "[parameters('storageAcctName')]",
      "storageAccountContainerName": "[parameters('storageAcctContainerName')]",
      "URI": "[variables('VMOneDataDiskUri')]",
      "DataDiskSizeGB": "80"

    },

    "VMObject12": {
      "Name": "[parameters('DBSVMName')]",
      "Size": "[parameters('VMSize2')]",
      "nicName": "[variables('NICObject12').Name]",
      "adminUserName": "[parameters('adminUsername')]",
      "adminPassword": "[parameters('adminPassword')]",
      "publisher": "MicrosoftSQLServer",
      "offer": "SQL2014-WS2012R2",
      "sku": "Enterprise",
      "version":"latest",
      "storageAccountName": "[parameters('storageAcctName')]",
      "storageAccountContainerName": "[parameters('storageAcctContainerName')]",
      "URI": "[variables('VMFourDataDisksURI')]",
      "DataDisk1SizeGB": "1023",
      "DataDisk2SizeGB": "1023",
      "DataDisk3SizeGB": "1023",
      "DataDisk4SizeGB": "1023"

    },
    "VMObject13": {
      "Name": "[parameters('PNNtrVMName')]",
      "Size": "[parameters('VMSize1')]",
      "nicName": "[variables('NICObject13').Name]",
      "adminUserName": "[parameters('adminUsername')]",
      "adminPassword": "[parameters('adminPassword')]",
      "publisher": "MicrosoftWindowsServer",
      "offer": "WindowsServer",
      "sku": "[parameters('windowsOSVersion')]",
      "version":"latest",
      "storageAccountName": "[parameters('storageAcctName')]",
      "storageAccountContainerName": "[parameters('storageAcctContainerName')]",
      "URI": "[variables('VMOneDataDiskUri')]",
      "DataDiskSizeGB": "80"

    },
    "VMObject14": {
      "Name": "[parameters('PNWebVMName')]",
      "Size": "[parameters('VMSize1')]",
      "nicName": "[variables('NICObject14').Name]",
      "adminUserName": "[parameters('adminUsername')]",
      "adminPassword": "[parameters('adminPassword')]",
      "publisher": "MicrosoftWindowsServer",
      "offer": "WindowsServer",
      "sku": "[parameters('windowsOSVersion')]",
      "version":"latest",
      "storageAccountName": "[parameters('storageAcctName')]",
      "storageAccountContainerName": "[parameters('storageAcctContainerName')]",
      "URI": "[variables('VMOneDataDiskUri')]",
      "DataDiskSizeGB": "80"

    },
    "VMObject15": {
      "Name": "[parameters('RDSVMName')]",
      "Size": "[parameters('VMSize1')]",
      "nicName": "[variables('NICObject15').Name]",
      "adminUserName": "[parameters('adminUsername')]",
      "adminPassword": "[parameters('adminPassword')]",
      "publisher": "MicrosoftWindowsServer",
      "offer": "WindowsServer",
      "sku": "[parameters('windowsOSVersion')]",
      "version":"latest",
      "storageAccountName": "[parameters('storageAcctName')]",
      "storageAccountContainerName": "[parameters('storageAcctContainerName')]",
      "URI": "[variables('VMOneDataDiskUri')]",
      "DataDiskSizeGB": "80"

    }


  },
  "resources": [

    {
      "name": "StorageAccountResource",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-02-01",
      "dependsOn": [ ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('StorageAccountURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "StorageAccountObject": {
            //"value": "[concat(parameters('OCReleaseVMName'),'-','availabilityset')]"
            "value": "[variables('StorageAccountObject')]"
          }
        }
      }
    },

    {
      "name": "NetworkInterfaceResource1",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-02-01",
      "dependsOn": [
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('NetworkInterfaceURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {

          "NICObject": {
            "value": "[variables('NICObject1')]"
          }
        }
      }
    },
    {
      "name": "NetworkInterfaceResource2",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-02-01",
      "dependsOn": [
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('NetworkInterfaceURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {

          "NICObject": {
            "value": "[variables('NICObject2')]"
          }
        }
      }
    },
    {
      "name": "NetworkInterfaceResource3",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-02-01",
      "dependsOn": [
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('NetworkInterfaceURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {

          "NICObject": {
            "value": "[variables('NICObject3')]"
          }
        }
      }
    },
    {
      "name": "NetworkInterfaceResource4",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-02-01",
      "dependsOn": [
     ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('NetworkInterfaceURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {

          "NICObject": {
            "value": "[variables('NICObject4')]"
          }
        }
      }
    },

    {
      "name": "NetworkInterfaceResource5",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-02-01",
      "dependsOn": [
     ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('NetworkInterfaceURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {

          "NICObject": {
            "value": "[variables('NICObject5')]"
          }
        }
      }
    },
    {
      "name": "NetworkInterfaceResource6",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-02-01",
      "dependsOn": [
     ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('NetworkInterfaceURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {

          "NICObject": {
            "value": "[variables('NICObject6')]"
          }
        }
      }
    },
    {
      "name": "NetworkInterfaceResource7",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-02-01",
      "dependsOn": [
     ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('NetworkInterfaceURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {

          "NICObject": {
            "value": "[variables('NICObject7')]"
          }
        }
      }
    },
    {
      "name": "NetworkInterfaceResource8",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-02-01",
      "dependsOn": [
     ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('NetworkInterfaceURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {

          "NICObject": {
            "value": "[variables('NICObject8')]"
          }
        }
      }
    },
    {
      "name": "NetworkInterfaceResource9",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-02-01",
      "dependsOn": [
    ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('NetworkInterfaceURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {

          "NICObject": {
            "value": "[variables('NICObject9')]"
          }
        }
      }
    },
    {
      "name": "NetworkInterfaceResource10",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-02-01",
      "dependsOn": [
     ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('NetworkInterfaceURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {

          "NICObject": {
            "value": "[variables('NICObject10')]"
          }
        }
      }
    },
    {
      "name": "NetworkInterfaceResource11",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-02-01",
      "dependsOn": [
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('NetworkInterfaceURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {

          "NICObject": {
            "value": "[variables('NICObject11')]"
          }
        }
      }
    },
    {
      "name": "NetworkInterfaceResource12",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-02-01",
      "dependsOn": [
     ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('NetworkInterfaceURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {

          "NICObject": {
            "value": "[variables('NICObject12')]"
          }
        }
      }
    },
    {
      "name": "NetworkInterfaceResource13",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-02-01",
      "dependsOn": [
    ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('NetworkInterfaceURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {

          "NICObject": {
            "value": "[variables('NICObject13')]"
          }
        }
      }
    },
    {
      "name": "NetworkInterfaceResource14",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-02-01",
      "dependsOn": [
     ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('NetworkInterfaceURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {

          "NICObject": {
            "value": "[variables('NICObject14')]"
          }
        }
      }
    },
    {
      "name": "NetworkInterfaceResource15",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-02-01",
      "dependsOn": [
     ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('NetworkInterfaceURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {

          "NICObject": {
            "value": "[variables('NICObject15')]"
          }
        }
      }
    },


    {
      "name": "VMResource1",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[resourceid('Microsoft.Resources/deployments/', 'StorageAccountResource')]",
        "[resourceid('Microsoft.Resources/deployments/', 'NetworkInterfaceResource1')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('VMObject1').URI]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "VMObject": {
            "value": "[variables('VMObject1')]"
          }
        }
      }
    },
    {
      "name": "VMResource2",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[resourceid('Microsoft.Resources/deployments/', 'StorageAccountResource')]",
        "[resourceid('Microsoft.Resources/deployments/', 'NetworkInterfaceResource2')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('VMObject2').URI]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "VMObject": {
            "value": "[variables('VMObject2')]"
          }
        }
      }
    },
    {
      "name": "VMResource3",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[resourceid('Microsoft.Resources/deployments/', 'StorageAccountResource')]",
        "[resourceid('Microsoft.Resources/deployments/', 'NetworkInterfaceResource3')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('VMObject3').URI]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "VMObject": {
            "value": "[variables('VMObject3')]"
          }
        }
      }
    },
        {
          "name": "VMResource4",
          "type": "Microsoft.Resources/deployments",
          "apiVersion": "2015-01-01",
          "dependsOn": [
            "[resourceid('Microsoft.Resources/deployments/', 'StorageAccountResource')]",
            "[resourceid('Microsoft.Resources/deployments/', 'NetworkInterfaceResource4')]"
          ],
          "properties": {
            "mode": "Incremental",
            "templateLink": {
              "uri": "[variables('VMObject4').URI]",
              "contentVersion": "1.0.0.0"
            },
            "parameters": {
              "VMObject": {
                "value": "[variables('VMObject4')]"
              }
            }
          }
        },
        {
          "name": "VMResource5",
          "type": "Microsoft.Resources/deployments",
          "apiVersion": "2015-01-01",
          "dependsOn": [
            "[resourceid('Microsoft.Resources/deployments/', 'StorageAccountResource')]",
            "[resourceid('Microsoft.Resources/deployments/', 'NetworkInterfaceResource5')]"
          ],
          "properties": {
            "mode": "Incremental",
            "templateLink": {
              "uri": "[variables('VMObject5').URI]",
              "contentVersion": "1.0.0.0"
            },
            "parameters": {
              "VMObject": {
                "value": "[variables('VMObject5')]"
              }
            }
          }
        },
        {
          "name": "VMResource6",
          "type": "Microsoft.Resources/deployments",
          "apiVersion": "2015-01-01",
          "dependsOn": [
            "[resourceid('Microsoft.Resources/deployments/', 'StorageAccountResource')]",
            "[resourceid('Microsoft.Resources/deployments/', 'NetworkInterfaceResource6')]"
          ],
          "properties": {
            "mode": "Incremental",
            "templateLink": {
              "uri": "[variables('VMObject6').URI]",
              "contentVersion": "1.0.0.0"
            },
            "parameters": {
              "VMObject": {
                "value": "[variables('VMObject6')]"
              }
            }
          }
        },
    {
      "name": "VMResource7",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[resourceid('Microsoft.Resources/deployments/', 'StorageAccountResource')]",
        "[resourceid('Microsoft.Resources/deployments/', 'NetworkInterfaceResource7')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('VMObject7').URI]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "VMObject": {
            "value": "[variables('VMObject7')]"
          }
        }
      }
    },
        {
          "name": "VMResource8",
          "type": "Microsoft.Resources/deployments",
          "apiVersion": "2015-01-01",
          "dependsOn": [
            "[resourceid('Microsoft.Resources/deployments/', 'StorageAccountResource')]",
            "[resourceid('Microsoft.Resources/deployments/', 'NetworkInterfaceResource8')]"
          ],
          "properties": {
            "mode": "Incremental",
            "templateLink": {
              "uri": "[variables('VMObject8').URI]",
              "contentVersion": "1.0.0.0"
            },
            "parameters": {
              "VMObject": {
                "value": "[variables('VMObject8')]"
              }
            }
          }
        },

        {
          "name": "VMResource9",
          "type": "Microsoft.Resources/deployments",
          "apiVersion": "2015-01-01",
          "dependsOn": [
            "[resourceid('Microsoft.Resources/deployments/', 'StorageAccountResource')]",
            "[resourceid('Microsoft.Resources/deployments/', 'NetworkInterfaceResource9')]"
          ],
          "properties": {
            "mode": "Incremental",
            "templateLink": {
              "uri": "[variables('VMObject9').URI]",
              "contentVersion": "1.0.0.0"
            },
            "parameters": {
              "VMObject": {
                "value": "[variables('VMObject9')]"
              }
            }
          }
        },
        {
          "name": "VMResource10",
          "type": "Microsoft.Resources/deployments",
          "apiVersion": "2015-01-01",
          "dependsOn": [
            "[resourceid('Microsoft.Resources/deployments/', 'StorageAccountResource')]",
            "[resourceid('Microsoft.Resources/deployments/', 'NetworkInterfaceResource10')]"
          ],
          "properties": {
            "mode": "Incremental",
            "templateLink": {
              "uri": "[variables('VMObject10').URI]",
              "contentVersion": "1.0.0.0"
            },
            "parameters": {
              "VMObject": {
                "value": "[variables('VMObject10')]"
              }
            }
          }
        },
        {
          "name": "VMResource11",
          "type": "Microsoft.Resources/deployments",
          "apiVersion": "2015-01-01",
          "dependsOn": [
            "[resourceid('Microsoft.Resources/deployments/', 'StorageAccountResource')]",
            "[resourceid('Microsoft.Resources/deployments/', 'NetworkInterfaceResource11')]"
          ],
          "properties": {
            "mode": "Incremental",
            "templateLink": {
              "uri": "[variables('VMObject11').URI]",
              "contentVersion": "1.0.0.0"
            },
            "parameters": {
              "VMObject": {
                "value": "[variables('VMObject11')]"
              }
            }
          }
        },
        {
          "name": "VMResource12",
          "type": "Microsoft.Resources/deployments",
          "apiVersion": "2015-01-01",
          "dependsOn": [
            "[resourceid('Microsoft.Resources/deployments/', 'StorageAccountResource')]",
            "[resourceid('Microsoft.Resources/deployments/', 'NetworkInterfaceResource12')]"
          ],
          "properties": {
            "mode": "Incremental",
            "templateLink": {
              "uri": "[variables('VMObject12').URI]",
              "contentVersion": "1.0.0.0"
            },
            "parameters": {
              "VMObject": {
                "value": "[variables('VMObject12')]"
              }
            }
          }
        },
        {
          "name": "VMResource13",
          "type": "Microsoft.Resources/deployments",
          "apiVersion": "2015-01-01",
          "dependsOn": [
            "[resourceid('Microsoft.Resources/deployments/', 'StorageAccountResource')]",
            "[resourceid('Microsoft.Resources/deployments/', 'NetworkInterfaceResource13')]"
          ],
          "properties": {
            "mode": "Incremental",
            "templateLink": {
              "uri": "[variables('VMObject13').URI]",
              "contentVersion": "1.0.0.0"
            },
            "parameters": {
              "VMObject": {
                "value": "[variables('VMObject13')]"
              }
            }
          }
        },
        {
          "name": "VMResource14",
          "type": "Microsoft.Resources/deployments",
          "apiVersion": "2015-01-01",
          "dependsOn": [
            "[resourceid('Microsoft.Resources/deployments/', 'StorageAccountResource')]",
            "[resourceid('Microsoft.Resources/deployments/', 'NetworkInterfaceResource14')]"
          ],
          "properties": {
            "mode": "Incremental",
            "templateLink": {
              "uri": "[variables('VMObject14').URI]",
              "contentVersion": "1.0.0.0"
            },
            "parameters": {
              "VMObject": {
                "value": "[variables('VMObject14')]"
              }
            }
          }
        },

        {
          "name": "VMResource15",
          "type": "Microsoft.Resources/deployments",
          "apiVersion": "2015-01-01",
          "dependsOn": [
            "[resourceid('Microsoft.Resources/deployments/', 'StorageAccountResource')]",
            "[resourceid('Microsoft.Resources/deployments/', 'NetworkInterfaceResource15')]"
          ],
          "properties": {
            "mode": "Incremental",
            "templateLink": {
              "uri": "[variables('VMObject15').URI]",
              "contentVersion": "1.0.0.0"
            },
            "parameters": {
              "VMObject": {
                "value": "[variables('VMObject15')]"
              }
            }
          }
        },

        {
            "comments": "join domain - jsonaddomainextension",
            "apiVersion": "2015-06-15",
            "dependsOn": [
              "[resourceid('Microsoft.Resources/deployments/', 'VMResource1')]"
            ],
            "type": "microsoft.compute/virtualmachines/extensions",
            "name": "[concat(parameters('OCReleaseVMName'),'/joindomain')]",
            "location": "[resourcegroup().location]",
            "properties": {
                "publisher": "microsoft.compute",
                "type": "jsonaddomainextension",
                "typehandlerversion": "1.3",
                "autoupgrademinorversion": true,
                "settings": {
                    "name": "[parameters('domainname')]",
                    "user": "[variables('domainUser')]",
                    //"User": "[concat(parameters('domainName'), '\\LocalAdmin')]",
                    "restart": "true",
//                    "options": "[variables('domainjoinoptions')]",
                    "options": "3",
                    "oupath": "[parameters('ouPath')]"
                },
                "protectedsettings": {
                    "password": "[parameters('dompassword')]"
                }
            }
        },

        {
            "comments": "join domain - jsonaddomainextension",
            "apiVersion": "2015-06-15",
            "dependsOn": [
              "[resourceid('Microsoft.Resources/deployments/', 'VMResource2')]"
            ],
            "type": "microsoft.compute/virtualmachines/extensions",
            "name": "[concat(parameters('OCTransAgentVMName'),'/joindomain')]",
            "location": "[resourcegroup().location]",
            "properties": {
                "publisher": "microsoft.compute",
                "type": "jsonaddomainextension",
                "typehandlerversion": "1.3",
                "autoupgrademinorversion": true,
                "settings": {
                    "name": "[parameters('domainname')]",
                    "user": "[variables('domainUser')]",
                    //"User": "[concat(parameters('domainName'), '\\LocalAdmin')]",
                    "restart": "true",
//                    "options": "[variables('domainjoinoptions')]",
                    "options": "3",
                    "oupath": "[parameters('ouPath')]"
                },
                "protectedsettings": {
                    "password": "[parameters('dompassword')]"
                }
            }
        },

        {
            "comments": "join domain - jsonaddomainextension",
            "apiVersion": "2015-06-15",
            "dependsOn": [
              "[resourceid('Microsoft.Resources/deployments/', 'VMResource3')]"
            ],
            "type": "microsoft.compute/virtualmachines/extensions",
            "name": "[concat(parameters('OCWeb1VMName'),'/joindomain')]",
            "location": "[resourcegroup().location]",
            "properties": {
                "publisher": "microsoft.compute",
                "type": "jsonaddomainextension",
                "typehandlerversion": "1.3",
                "autoupgrademinorversion": true,
                "settings": {
                    "name": "[parameters('domainname')]",
                    "user": "[variables('domainUser')]",
                    //"User": "[concat(parameters('domainName'), '\\LocalAdmin')]",
                    "restart": "true",
//                    "options": "[variables('domainjoinoptions')]",
                    "options": "3",
                    "oupath": "[parameters('ouPath')]"
                },
                "protectedsettings": {
                    "password": "[parameters('dompassword')]"
                }
            }
        },  
 
        {
            "comments": "join domain - jsonaddomainextension",
            "apiVersion": "2015-06-15",
            "dependsOn": [
              "[resourceid('Microsoft.Resources/deployments/', 'VMResource4')]"
            ],
            "type": "microsoft.compute/virtualmachines/extensions",
            "name": "[concat(parameters('OCWeb2VMName'),'/joindomain')]",
            "location": "[resourcegroup().location]",
            "properties": {
                "publisher": "microsoft.compute",
                "type": "jsonaddomainextension",
                "typehandlerversion": "1.3",
                "autoupgrademinorversion": true,
                "settings": {
                    "name": "[parameters('domainname')]",
                    "user": "[variables('domainUser')]",
                    //"User": "[concat(parameters('domainName'), '\\LocalAdmin')]",
                    "restart": "true",
//                    "options": "[variables('domainjoinoptions')]",
                    "options": "3",
                      "oupath": "[parameters('ouPath')]"
                },
                "protectedsettings": {
                    "password": "[parameters('dompassword')]"
                }
            }
        },

        {
            "comments": "join domain - jsonaddomainextension",
            "apiVersion": "2015-06-15",
            "dependsOn": [
              "[resourceid('Microsoft.Resources/deployments/', 'VMResource5')]"
            ],
            "type": "microsoft.compute/virtualmachines/extensions",
            "name": "[concat(parameters('OCApp1VMName'),'/joindomain')]",
            "location": "[resourcegroup().location]",
            "properties": {
                "publisher": "microsoft.compute",
                "type": "jsonaddomainextension",
                "typehandlerversion": "1.3",
                "autoupgrademinorversion": true,
                "settings": {
                    "name": "[parameters('domainname')]",
                    "user": "[variables('domainUser')]",
                    //"User": "[concat(parameters('domainName'), '\\LocalAdmin')]",
                    "restart": "true",
//                    "options": "[variables('domainjoinoptions')]",
                    "options": "3",
                      "oupath": "[parameters('ouPath')]"
              },
                "protectedsettings": {
                    "password": "[parameters('dompassword')]"
                }
            }
        },

        {
            "comments": "join domain - jsonaddomainextension",
            "apiVersion": "2015-06-15",
            "dependsOn": [
              "[resourceid('Microsoft.Resources/deployments/', 'VMResource6')]"
            ],
            "type": "microsoft.compute/virtualmachines/extensions",
            "name": "[concat(parameters('OCApp2VMName'),'/joindomain')]",
            "location": "[resourcegroup().location]",
            "properties": {
                "publisher": "microsoft.compute",
                "type": "jsonaddomainextension",
                "typehandlerversion": "1.3",
                "autoupgrademinorversion": true,
                "settings": {
                    "name": "[parameters('domainname')]",
                    "user": "[variables('domainUser')]",
                    //"User": "[concat(parameters('domainName'), '\\LocalAdmin')]",
                    "restart": "true",
//                    "options": "[variables('domainjoinoptions')]",
                    "options": "3",
                      "oupath": "[parameters('ouPath')]"
                },
                "protectedsettings": {
                    "password": "[parameters('dompassword')]"
                }
            }
        },

        {
            "comments": "join domain - jsonaddomainextension",
            "apiVersion": "2015-06-15",
            "dependsOn": [
              "[resourceid('Microsoft.Resources/deployments/', 'VMResource7')]"
            ],
            "type": "microsoft.compute/virtualmachines/extensions",
            "name": "[concat(parameters('OCAgentVMName'),'/joindomain')]",
            "location": "[resourcegroup().location]",
            "properties": {
                "publisher": "microsoft.compute",
                "type": "jsonaddomainextension",
                "typehandlerversion": "1.3",
                "autoupgrademinorversion": true,
                "settings": {
                    "name": "[parameters('domainname')]",
                    "user": "[variables('domainUser')]",
                    //"User": "[concat(parameters('domainName'), '\\LocalAdmin')]",
                    "restart": "true",
//                    "options": "[variables('domainjoinoptions')]",
                    "options": "3",
                      "oupath": "[parameters('ouPath')]"
                },
                "protectedsettings": {
                    "password": "[parameters('dompassword')]"
                }
            }
        },  
 
        {
            "comments": "join domain - jsonaddomainextension",
            "apiVersion": "2015-06-15",
            "dependsOn": [
              "[resourceid('Microsoft.Resources/deployments/', 'VMResource8')]"
            ],
            "type": "microsoft.compute/virtualmachines/extensions",
            "name": "[concat(parameters('OCBDIVMName'),'/joindomain')]",
            "location": "[resourcegroup().location]",
            "properties": {
                "publisher": "microsoft.compute",
                "type": "jsonaddomainextension",
                "typehandlerversion": "1.3",
                "autoupgrademinorversion": true,
                "settings": {
                    "name": "[parameters('domainname')]",
                    "user": "[variables('domainUser')]",
                    //"User": "[concat(parameters('domainName'), '\\LocalAdmin')]",
                    "restart": "true",
//                    "options": "[variables('domainjoinoptions')]",
                    "options": "3",
                      "oupath": "[parameters('ouPath')]"
                },
                "protectedsettings": {
                    "password": "[parameters('dompassword')]"
                }
            }
        },

        {
            "comments": "join domain - jsonaddomainextension",
            "apiVersion": "2015-06-15",
            "dependsOn": [
              "[resourceid('Microsoft.Resources/deployments/', 'VMResource9')]"
            ],
            "type": "microsoft.compute/virtualmachines/extensions",
            "name": "[concat(parameters('FormFastVMName'),'/joindomain')]",
            "location": "[resourcegroup().location]",
            "properties": {
                "publisher": "microsoft.compute",
                "type": "jsonaddomainextension",
                "typehandlerversion": "1.3",
                "autoupgrademinorversion": true,
                "settings": {
                    "name": "[parameters('domainname')]",
                    "user": "[variables('domainUser')]",
                    //"User": "[concat(parameters('domainName'), '\\LocalAdmin')]",
                    "restart": "true",
//                    "options": "[variables('domainjoinoptions')]",
                    "options": "3",
                      "oupath": "[parameters('ouPath')]"
                },
                "protectedsettings": {
                    "password": "[parameters('dompassword')]"
                }
            }
        },

        {
            "comments": "join domain - jsonaddomainextension",
            "apiVersion": "2015-06-15",
            "dependsOn": [
              "[resourceid('Microsoft.Resources/deployments/', 'VMResource10')]"
            ],
            "type": "microsoft.compute/virtualmachines/extensions",
            "name": "[concat(parameters('OCMDVMName'),'/joindomain')]",
            "location": "[resourcegroup().location]",
            "properties": {
                "publisher": "microsoft.compute",
                "type": "jsonaddomainextension",
                "typehandlerversion": "1.3",
                "autoupgrademinorversion": true,
                "settings": {
                    "name": "[parameters('domainname')]",
                    "user": "[variables('domainUser')]",
                    //"User": "[concat(parameters('domainName'), '\\LocalAdmin')]",
                    "restart": "true",
//                    "options": "[variables('domainjoinoptions')]",
                    "options": "3",
                      "oupath": "[parameters('ouPath')]"
                },
                "protectedsettings": {
                    "password": "[parameters('dompassword')]"
                }
            }
        },

        {
            "comments": "join domain - jsonaddomainextension",
            "apiVersion": "2015-06-15",
            "dependsOn": [
              "[resourceid('Microsoft.Resources/deployments/', 'VMResource11')]"
            ],
            "type": "microsoft.compute/virtualmachines/extensions",
            "name": "[concat(parameters('OCCaptivaVMName'),'/joindomain')]",
            "location": "[resourcegroup().location]",
            "properties": {
                "publisher": "microsoft.compute",
                "type": "jsonaddomainextension",
                "typehandlerversion": "1.3",
                "autoupgrademinorversion": true,
                "settings": {
                    "name": "[parameters('domainname')]",
                    "user": "[variables('domainUser')]",
                    //"User": "[concat(parameters('domainName'), '\\LocalAdmin')]",
                    "restart": "true",
//                    "options": "[variables('domainjoinoptions')]",
                    "options": "3",
                      "oupath": "[parameters('ouPath')]"
                },
                "protectedsettings": {
                    "password": "[parameters('dompassword')]"
                }
            }
        },

        {
            "comments": "join domain - jsonaddomainextension",
            "apiVersion": "2015-06-15",
            "dependsOn": [
              "[resourceid('Microsoft.Resources/deployments/', 'VMResource12')]"
            ],
            "type": "microsoft.compute/virtualmachines/extensions",
            "name": "[concat(parameters('DBSVMName'),'/joindomain')]",
            "location": "[resourcegroup().location]",
            "properties": {
                "publisher": "microsoft.compute",
                "type": "jsonaddomainextension",
                "typehandlerversion": "1.3",
                "autoupgrademinorversion": true,
                "settings": {
                    "name": "[parameters('domainname')]",
                    "user": "[variables('domainUser')]",
                    //"User": "[concat(parameters('domainName'), '\\LocalAdmin')]",
                    "restart": "true",
//                    "options": "[variables('domainjoinoptions')]",
                    "options": "3",
                      "oupath": "[parameters('ouPath')]"
                },
                "protectedsettings": {
                    "password": "[parameters('dompassword')]"
                }
            }
        },         
         {
            "comments": "join domain - jsonaddomainextension",
            "apiVersion": "2015-06-15",
            "dependsOn": [
              "[resourceid('Microsoft.Resources/deployments/', 'VMResource13')]"
            ],
            "type": "microsoft.compute/virtualmachines/extensions",
            "name": "[concat(parameters('PNNtrVMName'),'/joindomain')]",
            "location": "[resourcegroup().location]",
            "properties": {
                "publisher": "microsoft.compute",
                "type": "jsonaddomainextension",
                "typehandlerversion": "1.3",
                "autoupgrademinorversion": true,
                "settings": {
                    "name": "[parameters('domainname')]",
                    "user": "[variables('domainUser')]",
                    //"User": "[concat(parameters('domainName'), '\\LocalAdmin')]",
                    "restart": "true",
//                    "options": "[variables('domainjoinoptions')]",
                    "options": "3",
                      "oupath": "[parameters('ouPath')]"
                },
                "protectedsettings": {
                    "password": "[parameters('dompassword')]"
                }
            }
        },

        {
            "comments": "join domain - jsonaddomainextension",
            "apiVersion": "2015-06-15",
            "dependsOn": [
              "[resourceid('Microsoft.Resources/deployments/', 'VMResource14')]"
            ],
            "type": "microsoft.compute/virtualmachines/extensions",
            "name": "[concat(parameters('PNWebVMName'),'/joindomain')]",
            "location": "[resourcegroup().location]",
            "properties": {
                "publisher": "microsoft.compute",
                "type": "jsonaddomainextension",
                "typehandlerversion": "1.3",
                "autoupgrademinorversion": true,
                "settings": {
                    "name": "[parameters('domainname')]",
                    "user": "[variables('domainUser')]",
                    //"User": "[concat(parameters('domainName'), '\\LocalAdmin')]",
                    "restart": "true",
//                    "options": "[variables('domainjoinoptions')]",
                    "options": "3",
                      "oupath": "[parameters('ouPath')]"
                },
                "protectedsettings": {
                    "password": "[parameters('dompassword')]"
                }
            }
        },

        {
            "comments": "join domain - jsonaddomainextension",
            "apiVersion": "2015-06-15",
            "dependsOn": [
              "[resourceid('Microsoft.Resources/deployments/', 'VMResource15')]"
            ],
            "type": "microsoft.compute/virtualmachines/extensions",
            "name": "[concat(parameters('RDSVMName'),'/joindomain')]",
            "location": "[resourcegroup().location]",
            "properties": {
                "publisher": "microsoft.compute",
                "type": "jsonaddomainextension",
                "typehandlerversion": "1.3",
                "autoupgrademinorversion": true,
                "settings": {
                    "name": "[parameters('domainname')]",
                    "user": "[variables('domainUser')]",
                    //"User": "[concat(parameters('domainName'), '\\LocalAdmin')]",
                    "restart": "true",
//                    "options": "[variables('domainjoinoptions')]",
                    "options": "3",
                      "oupath": "[parameters('ouPath')]"
                },
                "protectedsettings": {
                    "password": "[parameters('dompassword')]"
                }
            }
        },


    //    DSC Server Config
    //    OC Release Server
        {
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(parameters('OCReleaseVMName'),'/OCReleaseDscExtension')]",
          "apiVersion": "2015-06-15",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceid('Microsoft.Resources/deployments/', 'VMResource1')]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.19",
            "autoUpgradeMinorVersion": false,
            "settings": {
              "modulesUrl": "[variables('OCReleaseDSCModuleUrl')]",
              "SasToken": "",
              "configurationFunction": "[variables('OCReleaseConfigurationFunction')]",
              "configurationData": {
                "url": "[variables('Configurationurl')]"
               },
              //"wmfVersion": "4.0",
              "Properties": {               
              }
            },
            "protectedSettings": { }
          }
        },         

    //    OC Trans Agent
        {
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(parameters('OCTransAgentVMName'),'/OCTransAgentDscExtension')]",
          "apiVersion": "2015-06-15",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceid('Microsoft.Resources/deployments/', 'VMResource2')]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.19",
            "autoUpgradeMinorVersion": false,
            "settings": {
              "modulesUrl": "[variables('OCTransAgentDSCModuleUrl')]",
              "SasToken": "",
              "configurationFunction": "[variables('OCTransAgentConfigurationFunction')]",
              "configurationData": {
                "url": "[variables('Configurationurl')]"
               },
              //"wmfVersion": "4.0",
              "Properties": {               
              }
            },
            "protectedSettings": { }
          }
        },         
   //    OC WEb1
        {
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(parameters('OCWeb1VMName'),'/OCWebDscExtension')]",
          "apiVersion": "2015-06-15",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceid('Microsoft.Resources/deployments/', 'VMResource3')]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.19",
            "autoUpgradeMinorVersion": false,
            "settings": {
              "modulesUrl": "[variables('OCWebDSCModuleUrl')]",
              "SasToken": "",
              "configurationFunction": "[variables('OCWebConfigurationFunction')]",
              "configurationData": {
                "url": "[variables('Configurationurl')]"
               },
              //"wmfVersion": "4.0",
              "Properties": {               
              }
            },
            "protectedSettings": { }
          }
        },         
    //    OC WEb2
        {
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(parameters('OCWeb2VMName'),'/OCWebDscExtension')]",
          "apiVersion": "2015-06-15",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceid('Microsoft.Resources/deployments/', 'VMResource4')]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.19",
            "autoUpgradeMinorVersion": false,
            "settings": {
              "modulesUrl": "[variables('OCWebDSCModuleUrl')]",
              "SasToken": "",
              "configurationFunction": "[variables('OCWebConfigurationFunction')]",
              "configurationData": {
                "url": "[variables('Configurationurl')]"
               },
              //"wmfVersion": "4.0",
              "Properties": {               
              }
            },
            "protectedSettings": { }
          }
        }, 
    
        //    OC App1
        {
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(parameters('OCApp1VMName'),'/OCAppDscExtension')]",
          "apiVersion": "2015-06-15",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceid('Microsoft.Resources/deployments/', 'VMResource5')]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.19",
            "autoUpgradeMinorVersion": false,
            "settings": {
              "modulesUrl": "[variables('OCAppDSCModuleUrl')]",
              "SasToken": "",
              "configurationFunction": "[variables('OCAppConfigurationFunction')]",
              "configurationData": {
                "url": "[variables('Configurationurl')]"
               },
              //"wmfVersion": "4.0",
              "Properties": {               
              }
            },
            "protectedSettings": { }
          }
        },         
    //    OC App2
        {
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(parameters('OCApp2VMName'),'/OCAppDscExtension')]",
          "apiVersion": "2015-06-15",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceid('Microsoft.Resources/deployments/', 'VMResource6')]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.19",
            "autoUpgradeMinorVersion": false,
            "settings": {
              "modulesUrl": "[variables('OCAppDSCModuleUrl')]",
              "SasToken": "",
              "configurationFunction": "[variables('OCAppConfigurationFunction')]",
              "configurationData": {
                "url": "[variables('Configurationurl')]"
               },
              //"wmfVersion": "4.0",
              "Properties": {               
              }
            },
            "protectedSettings": { }
          }
        },         

    //    OC Agent
        {
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(parameters('OCAgentVMName'),'/OCAgentDscExtension')]",
          "apiVersion": "2015-06-15",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceid('Microsoft.Resources/deployments/', 'VMResource7')]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.19",
            "autoUpgradeMinorVersion": false,
            "settings": {
              "modulesUrl": "[variables('OCAgentDSCModuleUrl')]",
              "SasToken": "",
              "configurationFunction": "[variables('OCAgentConfigurationFunction')]",
              "configurationData": {
                "url": "[variables('Configurationurl')]"
               },
              //"wmfVersion": "4.0",
              "Properties": {               
              }
            },
            "protectedSettings": { }
          }
        },         
 
    //    OC BDI
        {
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(parameters('OCBDIVMName'),'/OCBDIDscExtension')]",
          "apiVersion": "2015-06-15",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceid('Microsoft.Resources/deployments/', 'VMResource8')]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.19",
            "autoUpgradeMinorVersion": false,
            "settings": {
              "modulesUrl": "[variables('OCBDIDSCModuleUrl')]",
              "SasToken": "",
              "configurationFunction": "[variables('OCBDIConfigurationFunction')]",
              "configurationData": {
                "url": "[variables('Configurationurl')]"
               },
              //"wmfVersion": "4.0",
              "Properties": {               
              }
            },
            "protectedSettings": { }
          }
        },             
    //    OC Captiva
        {
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(parameters('OCCaptivaVMName'),'/OCCaptivaDscExtension')]",
          "apiVersion": "2015-06-15",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceid('Microsoft.Resources/deployments/', 'VMResource11')]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.19",
            "autoUpgradeMinorVersion": false,
            "settings": {
              "modulesUrl": "[variables('OCCaptivaDSCModuleUrl')]",
              "SasToken": "",
              "configurationFunction": "[variables('OCCaptivaConfigurationFunction')]",
              "configurationData": {
                "url": "[variables('Configurationurl')]"
               },
              //"wmfVersion": "4.0",
              "Properties": {               
              }
            },
            "protectedSettings": { }
          }
        },            
  
    //    PN Ntr
        {
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(parameters('PNNtrVMName'),'/PNNtrDscExtension')]",
          "apiVersion": "2015-06-15",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceid('Microsoft.Resources/deployments/', 'VMResource13')]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.19",
            "autoUpgradeMinorVersion": false,
            "settings": {
              "modulesUrl": "[variables('PNNtrDSCModuleUrl')]",
              "SasToken": "",
              "configurationFunction": "[variables('PNNtrConfigurationFunction')]",
              "configurationData": {
                "url": "[variables('Configurationurl')]"
               },
              //"wmfVersion": "4.0",
              "Properties": {               
              }
            },
            "protectedSettings": { }
          }
        },  
    //    PN Web
        {
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(parameters('PNWebVMName'),'/PNWebDscExtension')]",
          "apiVersion": "2015-06-15",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceid('Microsoft.Resources/deployments/', 'VMResource14')]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.19",
            "autoUpgradeMinorVersion": false,
            "settings": {
              "modulesUrl": "[variables('PNWebDSCModuleUrl')]",
              "SasToken": "",
              "configurationFunction": "[variables('PNWebConfigurationFunction')]",
              "configurationData": {
                "url": "[variables('Configurationurl')]"
               },
              //"wmfVersion": "4.0",
              "Properties": {
                "SourcePath": "[variables('SourcePath')]"
              }
            },
            "protectedSettings": { }
          }
        },  

    //    Remote Desktop Services Configuration via DSC Extension
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('RDSVMName'),'/ConfigureRDS')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments/', 'VMResource15')]"
      ],
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.11",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "modulesUrl": "[variables('RDSDSCModuleUrL')]",
          "configurationFunction": "[variables('RDSConfigurationFunction')]",
          "Properties": {
          }
        },
        "protectedSettings": { }
      }
    },

   //Paragon Configuration via DSC Extension
     //      DB Server
        {
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(parameters('DBSVMName'),'/DBConfigDscExtension')]",
          "apiVersion": "2015-06-15",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceid('Microsoft.Resources/deployments/', 'VMResource12')]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.19",
            "autoUpgradeMinorVersion": false,
            "settings": {
              "ModulesUrl": "[variables('DBDSCModuleUrl')]",
              "SasToken": "",
              "configurationFunction": "[variables('DBConfigurationFunction')]",
              "configurationData": {
                "url": "[variables('Configurationurl')]"
              },
             // "wmfVersion": "4.0",
             "Properties": {
                "DomainName": "[parameters('DomainName')]",
                "AdminCreds": {
                  "UserName": "[parameters('adminUsername')]",
                  "Password": "PrivateSettingsRef:AdminPassword"
                }
              }
            },
            "protectedSettings": {
              "Items": {
                "AdminPassword": "[parameters('domPassword')]"
              }
            }
          }
        }
    //,
    //    {
    //        "comments": "Generalized from resource: '/subscriptions/33b63578-8e56-4ebe-bb38-538bfb4ff7de/resourcegroups/SLCES-Automation-RG/providers/Microsoft.Automation/automationAccounts/SLCES-Automation/runbooks/Reset-Local_Account'.",
    //        "type": "Microsoft.Automation/automationAccounts/runbooks",
    //        "name": "[variables('runbook_start_name')]",
    //        "apiVersion": "2015-10-31",
    //        "location": "eastus2",
    //        "properties": {
    //            "runbookType": "PowerShell",
    //            "logVerbose": false,
    //            "logProgress": false
    //        },
    //        "resources": [],
    //        "dependsOn": []
    //    },
    //    {
    //        "comments": "Generalized from resource: '/subscriptions/33b63578-8e56-4ebe-bb38-538bfb4ff7de/resourcegroups/SLCES-Automation-RG/providers/Microsoft.Automation/automationAccounts/SLCES-Automation/runbooks/Start-A00101OCIRG-VMs'.",
    //        "type": "Microsoft.Automation/automationAccounts/runbooks",
    //        "name": "[variables('runbook_start_name')]",
    //        "apiVersion": "2015-10-31",
    //        "location": "eastus2",
    //        "properties": {
    //            "runbookType": "PowerShell",
    //            "logVerbose": false,
    //            "logProgress": false
    //        },
    //        "resources": [],
    //        "dependsOn": [
    //        ]
    //    }


  ] //,
  //"outputs": {
  //"hostname": {
  // "type": "string",

  // }
  // }
}
